
@page "/Registration"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using MolotovSportWeb.Models
@using Classes.Hash;
@inject NavigationManager navigationManager
@inject Classes.Servers.UserStateService UserState

@inject MolotovSportWebContext DbContext

<div class="text-center">
    <div class="ScreenLogUser">
        <h2 class="textHeaderPage">Регистрация</h2>
        <br />
        <h5 class="textScreenInput">Имя </h5>
        <br />
        <div>
            <input @onchange="CheakName" class="StyleInputRegistation" />
            <h5 style="color: red">@errorName</h5>
        </div>
        <h5 class="textScreenInput">Email </h5>
        <br />
        <div>
            <input @onchange="CheakEmail" class="StyleInputRegistation"  />
            <h5 style="color: red">@errorEmail</h5>
        </div>
        <br />
        <h5 class="textScreenInput">Пароль </h5>
        <br />
        <div>
            <input @onchange="CheakPassword" type="password" class="StyleInputRegistation" />
            <h5 style="color: red">@errorPassword</h5>
        </div>
        <br />
        <button Disabled="@disableButton" @onclick="ClickButton" class="StyleButtonVhod">Зарегистироваться</button>


    </div>
</div>

@code {

    bool disableButton = true;

    private string errorName = "Имя должно быть не короче 5 символов";
    private string errorEmail = "Некоректный адресс электронной почты";
    private string errorPassword = "Пароль должен быть не менее 6 символов";


    string name = "";
    string email = "";
    string password = "";

    Classes.CheakData.CheakingDataRegistration cheakingData = new Classes.CheakData.CheakingDataRegistration();


    private void CheakName(ChangeEventArgs e)
    {

        name = Convert.ToString(e.Value);
        errorName = cheakingData.cheakName(name);
        disableButton = cheakingData.DisableButton(errorName, errorEmail, errorPassword);
    }

    private void CheakEmail(ChangeEventArgs e)
    {
        email = Convert.ToString(e.Value);
        errorEmail = cheakingData.cheakEmail(email);
        disableButton = cheakingData.DisableButton(errorName, errorEmail, errorPassword);

    }

    private void CheakPassword(ChangeEventArgs e)
    {
        password = Convert.ToString(e.Value);
        errorPassword = cheakingData.cheakPassword(password);
        disableButton = cheakingData.DisableButton(errorName, errorEmail, errorPassword);

    }



    private void ClickButton()
    {
        using (var context = new MolotovSportWebContext())
        {
            List<User> users = context.Users.ToList();

            List<User> cheakEmail = users.Where(x => x.Email == email).ToList();

            if(cheakEmail.Count == 0)
            {
                HashPassword hashPassword = new HashPassword();
                DataHash dataHash = hashPassword.hashing(password);
                var newUser = new User
                    {
                        UserName = name,
                        PasswordHash = dataHash.Hash,
                        Salt = dataHash.Salt,
                        Email = email,
                        RoleId = 1
                    };

                context.Users.Add(newUser);
                context.SaveChanges();

                User user = context.Users.Where(u => u.Email == email).First();

                var newCartUser = new ShopingCart
                    {
                        UserId = user.UserId,
                        TotalAmout = 0
                    };
                context.ShopingCarts.Add(newCartUser);
                context.SaveChanges();

                UserState.Login(name, user.UserId, 1);
                navigationManager.NavigateTo($"/");
            }

            else if(cheakEmail.Count > 0)
            {
                errorEmail = "Пользователь с таким email уже есть";
            }

         }  


           


    }

    

}