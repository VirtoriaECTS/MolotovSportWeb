@page "/MakingOrderUser"
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@using Microsoft.EntityFrameworkCore
@using MolotovSportWeb.Models

@inject MolotovSportWebContext context
@inject Classes.Servers.UserStateService UserState
@inject Components.Classes.Servers.YandexGeocoderService GeocoderService



<script src="js/deliveryCalculator.js?v=1.1" type="text/javascript" v=2.0></script>

<div class="ScreenLogUser">
    <div class="text-center">
        <h2 class="textHeaderPage">Выберите адрес</h2>


@*         <div  class="text-center" style="height: 500px; margin: 0px 0px 0px 780px;" id="map"></div> *@
        <input class="StyleInputRegistation" @bind="adress" />

        <br />

        <button @onclick="ClickNewOrder" class="StyleButtonVhod">Оформить заказ</button>
    </div>

</div>



@code {

    bool cheak = false;
    string location { get; set; } = "sssss";
    string anwer = "sss1";
    string adress;

    protected override void OnAfterRender(bool firstRender)
    {
        StateHasChanged();
    }


    // async Task getLocationFromJS()
    // {
    //     location = await JSRuntime.InvokeAsync<string>("getLocation");

    //     string[] array = location.Split('|');


    //     string[] coordinate =  array[0].Split(',');


    //     // double Longitude = ; // Default value
    //     // double Latitude = Convert.ToDouble(coordinate[1]); // Default value
    //     anwer = Convert.ToString(coordinate.Length);
    //     string adress = "";





    // }

    int idUser = 0;

    protected override void OnParametersSet()

    {
        Components.Classes.Save.FileWork fileWork = new Classes.Save.FileWork();

        string[] array = fileWork.Read();
        UserState.Login(array[0], Convert.ToInt32(array[1]), Convert.ToInt32(array[2]));



        idUser = UserState.CheakUserId();
    }


    public async Task ClickNewOrder()
    {
        // location = await JSRuntime.InvokeAsync<string>("getLocation");
        if(adress.Length > 0)
        {
            Classes.DataBase.CreateOrder createOrder = new Classes.DataBase.CreateOrder(idUser);

            createOrder.Create(adress + "|" + "500");

            navigationManager.NavigateTo("/");
        }


    }

 
}


