@page "/Account"
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@inject Classes.Servers.UserStateService UserState

@using Microsoft.EntityFrameworkCore
@using MolotovSportWeb.Models

@inject MolotovSportWebContext DbContext

<div class="ScreenLogUser">
    <div class="text-center">
        <h4 class="textHeaderPage">Мои заказы</h4>


        <table>
            <tr>
                <td class="textOrderTD">
                    <pre class="txtOrderArmin">Дата заказа</pre>
                </td>
                <td class="BorderSettingNoRight">
                    <pre class="txtOrderArmin">Адрес</pre>
                </td>

                <td>
                    <table>

                        <tr>
                            <td class="textOrderTD">
                                <pre class="txtOrderArmin">Изображение</pre>
                            </td>

                            <td class="textOrderTD">
                                <pre class="txtOrderArmin">Название</pre>
                            </td>

                            <td class="textOrderTD">
                                <pre class="txtOrderArmin">Количество</pre>
                            </td>
                        </tr>
                    </table>
                </td>

                <td class="BorderSettingNoBottomLeft">
                    <pre class="txtOrderArmin">Общая сумма</pre>
                </td>

                <td class="textOrderTD">
                    <pre class="txtOrderArmin">Статус</pre>
                </td>
            </tr>

            @foreach (var order in orders.Where(p => p.UserId == idUser))
            {
                <tr>
                    <td class="textOrderTD" style="vertical-align: top;">
                        <pre class="txtOrderArmin">@order.OrderData</pre>
                    </td>
                    <td class="BorderSettingNoRight" style="vertical-align: top;">
                        <pre class="txtOrderArmin">@order.Adress</pre>
                    </td>

                    <td>
                        <table>

                            @foreach (var item in order.OrderItems)
                            {
                                <tr>
                                    <td class="BorderSettingNoBottomTop">
                                        <img class="ProductImageAdminOrder" src="@products.Where( p => p.ProductId == item.ProductId).Select(p => p.ImageUrl).First()" />
                                    </td>

                                    <td class="BorderSettingNoBottomTop">
                                        <pre class="txtOrderArmin">@products.Where(p => p.ProductId == item.ProductId).Select(p => p.ProductName).First()</pre>
                                    </td>
                                    <td class="BorderSettingNoBottomTop">
                                        <pre class="txtOrderArmin">@item.Count</pre>
                                    </td>
                                </tr>
                            }
                        </table>
                    </td>

                    <td class="BorderSettingNoBottomLeft" style="vertical-align: top;">
                        <pre class="txtOrderArmin">@Convert.ToInt32(order.TotalAmout) рублей</pre>
                    </td>

                    <td class="textOrderTD" style="vertical-align: top;">
                        <input class="CheakBoxFiltrStileAdmin" type="checkbox" @bind="order.StatusOrder" />
                    </td>
                </tr>

            }

        </table>


        <button class="AdminButtonAddProduct" @onclick="ClickExit">Выйти</button>
    </div>

</div>


@code {
    int idUser = 0;
    string error = "";

    Classes.DataBase.OrdersDataBase ordersDataBase = new Classes.DataBase.OrdersDataBase();
    List<Order> orders = new List<Order>();
    List<Product> products = new List<Product>();
    List<User> users = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        idUser = UserState.UserId;
        orders = ordersDataBase.FillOrderList();
        
        products = ordersDataBase.FillProductList();
        users = ordersDataBase.FillUsersList();
        StateHasChanged();
        //orders.LoadingDataBaseAsync();
    }

    private void ClickExit()
    {
        UserState.Logout();
        navigationManager.NavigateTo($"/");
    }
}
