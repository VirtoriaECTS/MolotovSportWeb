@page "/Product/{id:int}"
@rendermode InteractiveServer
@inject NavigationManager navigationManager
@using Microsoft.EntityFrameworkCore
@using MolotovSportWeb.Models

@inject MolotovSportWebContext DbContext
@inject Classes.Servers.UserStateService UserState



@if (SelectedProduct != null)
{
    <tr>

        <td class="ProductOneStyle">
            <img class="ProductOneImage" src=@SelectedProduct.ImageUrl />

        </td>

        <td class="TableProductInfo">
            <pre class="TextFirm">@SelectedProduct.Firm.FirmName</pre>
            <pre class="TextName">@SelectedProduct.ProductName</pre>
            <pre class="TextAllView">Общие характеристики:</pre>
            <pre class="TextCategoryProduct">Пол: @SelectedProduct.Gender.GenderName</pre>
            <pre class="TextCategoryProduct">Категория: @SelectedProduct.CategoriesMini.Category.CategoryName</pre>
            <pre class="TextCategoryProduct">Подкатегория: @SelectedProduct.CategoriesMini.CategoryMiniName</pre>

            <div class="SpisokSize">
                <select  id="SizeElemenrProduct" multiple>
                    @foreach (var size in SelectedProduct.ProductSizes.Where(p => p.Count > 0))
                    {

                        <option @onclick="() => ChangeSize(size.SizeId)" value=@size.SizeId>@size.Size</option>

                    }

                </select>
            </div>
            <h5 style="color: red">@error</h5>
            <br />
            <button @onclick="ClickAddCart" class="OneElementButtonCart">В корзину</button>

        </td>

    </tr>
}

@code {
    [Parameter]
    public int? id { get; set; }
    string error = "";
    int idSize = 0;

    Classes.DataBase.ChangeProductUser changeProduct;

    private MolotovSportWeb.Models.Product SelectedProduct;

    protected override  void OnInitialized()
    {
        SelectedProduct =  DbContext.Products.Include(p=> p.CategoriesMini)
                                          .Include(p => p.CategoriesMini.Category)
                                          .Include(p => p.Gender)
                                          .Include(p => p.ProductSizes)
                                         .Include(p => p.Firm) 
                                         .FirstOrDefault(p => p.ProductId == id);

        changeProduct = new Classes.DataBase.ChangeProductUser(UserState.UserId);
    }

    private void ClickAddCart()
    {
        if(idSize == 0)
        {
            error = "Выберите размер";
        }
        else if(UserState.CheakUserId() == 0)
        {
            error = "Необходимо войти в систему";
        }
        else
        {
            error = "";
            changeProduct.NewProductAddBasket(SelectedProduct, idSize, Convert.ToInt32(SelectedProduct.Price));
        }

    }

    private void ChangeSize(int id)
    {
        idSize = id;

    }
}
